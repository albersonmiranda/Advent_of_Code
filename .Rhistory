install.packages("usethis")
usethis::edit_r_environ()
install.packages("golem")
remove.packages("languageserver", lib="~/R/win-library/4.0")
install.packages(c("backports", "colorspace", "cpp11", "data.table", "dbplyr", "digest", "generics", "here", "lubridate", "magrittr", "R6", "RcppArmadillo", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "servr", "testthat", "tibble", "tinytex", "vctrs", "xfun"))
setwd("~/R/Advent_of_Code/day_2")
# Problema 1: verificar validade da senha
data = read.delim("day_2/data.txt", sep = ":")
# Pacotes
library(tidyverse)
setwd("~/R/Advent_of_Code")
# Problema 1: verificar validade da senha
data = read.delim("day_2/data.txt", sep = ":")
library(RVerbalExpressions)
# Número mínimo da política
regex_minimo = rx() %>%
rx_digit() %>%
rx_multiple() %>%
rx_seek_suffix("-")
# Número máximo da política
regex_maximo = rx() %>%
rx_seek_prefix("-") %>%
rx_digit() %>%
rx_multiple()
# letra a ser avaliada
regex_letra = rx() %>%
rx_alpha()
# Problema 2: Outra policy
data <- data %>%
mutate(
pos_1 = as.integer(str_extract(policy, regex_minimo)),
pos_2 = as.integer(str_extract(policy, regex_maximo)),
letra = str_extract(policy, regex_letra)
)
# check
data = data %>%
mutate(
password = str_trim(password),
pos_letra = str_locate_all(password, letra)
)
head(data)
data$pos_letra
data$pos_letra[1]
data$pos_letra[[1]]
data$pos_letra$start
data$pos_letra[1,]
data$pos_letra[,1]
data$pos_letra[[,1]]
data$pos_letra[[1,1]]
data$pos_letra[1]
data$pos_letra[1]$start
data$pos_letra[1][1]
data$pos_letra[1][1,]
data$pos_letra[1][[1]]
data %>%
mutate(
password = str_trim(password),
pos_letra = str_locate_all(password, letra)[0,1]
)
data %>% select(pos_letra) %>% pull(start)
data %>%
mutate(
password = str_trim(password),
pos_letra = str_locate(password, letra)
)
# check
data = data %>%
mutate(
password = str_trim(password),
pos_letra = str_locate_all(password, letra)
)
data
head(data)
head(data)
data %>%
mutate(
password = str_trim(password),
pos_letra_1 = str_sub(password, pos_1, pos_1)
)
# Problema 1: verificar validade da senha
data = read.delim("day_2/data.txt", sep = ":")
# dataframe
data = data %>%
mutate(
minimo = as.integer(str_extract(policy, regex_minimo)),
maximo = as.integer(str_extract(policy, regex_maximo)),
letra = str_extract(policy, regex_letra)
)
# Problema 2: Outra policy
data <- data %>%
mutate(
pos_1 = as.integer(str_extract(policy, regex_minimo)),
pos_2 = as.integer(str_extract(policy, regex_maximo)),
letra = str_extract(policy, regex_letra)
)
# check
data = data %>%
mutate(
password = str_trim(password),
pos_letra_1 = str_sub(password, pos_1, pos_1)
)
head(data)
# check
data = data %>%
mutate(
password = str_trim(password),
pos_letra_1 = str_sub(password, pos_1, pos_1),
pos_letra_2 = str_sub(password, pos_2, pos_2)
)
head(data)
# validate
data <- data %>%
mutate(contagem = case_when(
letra != pos_letra_1 & letra == pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra != pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra == pos_letra_2 ~ FALSE,
letra != pos_letra_1 & letra != pos_letra_2 ~ TRUE,
TRUE ~ "verificar"
))
# validate
data <- data %>%
mutate(contagem = case_when(
letra != pos_letra_1 & letra == pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra != pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra == pos_letra_2 ~ FALSE,
letra != pos_letra_1 & letra != pos_letra_2 ~ TRUE
))
head(data)
# validate
data <- data %>%
mutate(contagem = case_when(
letra != pos_letra_1 & letra == pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra != pos_letra_2 ~ TRUE,
letra == pos_letra_1 & letra == pos_letra_2 ~ FALSE,
letra != pos_letra_1 & letra != pos_letra_2 ~ FALSE
))
head(data)
sum(data$contagem)
